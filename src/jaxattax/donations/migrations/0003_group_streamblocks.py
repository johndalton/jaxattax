# Generated by Django 3.1.7 on 2021-04-12 12:38
import functools

from django.db import migrations

from jaxattax.utils.migrations import StreamFieldDataMigration


def rename_block(from_name, to_name, blocks):
    for block in blocks:
        if block['type'] == from_name:
            block = block.copy()
            block['type'] = to_name
        yield block


def forwards(instance, data):
    # A few things changed:
    # In rich_content blocks, large_image was renamed to captioned_image
    # side_image blocks were nested into rich_content blocks
    new_data = []
    for child in data:
        if child['type'] == 'rich_content':
            child['value'] = list(rename_block('large_image', 'captioned_image', child['value']))
        elif child['type'] == 'side_image':
            child = {'type': 'rich_content', 'value': [child]}
        new_data.append(child)
    return new_data


def split_side_image(all_blocks):
    rich_content_blocks = []
    for child in all_blocks:
        if child['type'] == 'side_image':
            if rich_content_blocks:
                yield {'type': 'rich_content', 'value': rich_content_blocks}
                rich_content_blocks = []
            yield child


def reduce_split_side_image(new_blocks, next_block):
    if next_block['type'] == 'side_image':
        new_blocks.append(next_block)
        return new_blocks

    if new_blocks and new_blocks[-1]['type'] == 'rich_content':
        rich_content = new_blocks[-1]
    else:
        rich_content = {'type': 'rich_content', 'value': []}
        new_blocks.append(rich_content)
    rich_content['value'].append(next_block)
    return new_blocks


def backwards(instance, data):
    new_data = []
    for child in data:
        if child['type'] == 'rich_content':
            all_blocks = list(rename_block('captioned_image', 'large_image', child['value']))
            new_data.extend(functools.reduce(reduce_split_side_image, all_blocks, []))
        else:
            new_data.append(child)
    return new_data


class Migration(migrations.Migration):

    dependencies = [
        ('donations', '0002_add_cashdonation_email'),
    ]

    operations = [
        StreamFieldDataMigration(
            model_name='donatepage',
            name='body',
            forwards_code=forwards,
            backwards_code=backwards,
        ),
        StreamFieldDataMigration(
            model_name='donatepage',
            name='success_body',
            forwards_code=forwards,
            backwards_code=backwards,
        ),
    ]
